version: "3.8"

services:
  postgres_db:
    image: postgres
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blog_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blog_db"]
      interval: 5s
      timeout: 2s
      retries: 20
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c listen_addresses='*'
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: blog-redis
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
  server:
    container_name: blog-server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    env_file:
      - .env
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_started

  prisma-studio:
    image: node:lts-alpine3.17
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: npx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file:
      - .env
    networks:
      - prisma-network
    depends_on:
      postgres_db:
        condition: service_healthy
      server:
        condition: service_started

networks:
  blog-network:
    name: blog-server-network
    driver: bridge

volumes:
  postgres_data:
